using System;
using System.Net;
using System.Net.Sockets;

namespace PortScanner
{
    class Program
    {
        static void Main(string[] args)
        {
            // Get the IP address of the local machine
            string host = Dns.GetHostName();
            IPHostEntry ip = Dns.GetHostEntry(host);
            IPAddress localAddress = ip.AddressList[0];

            // Get the subnet mask of the local machine
            IPInterfaceProperties adapterProperties = NetworkInformation.GetIPProperties(localAddress);
            IPAddress mask = adapterProperties.UnicastAddresses[0].IPv4Mask;

            // Calculate the subnet address
            byte[] ipAdressBytes = localAddress.GetAddressBytes();
            byte[] subnetMaskBytes = mask.GetAddressBytes();
            byte[] subnetAddressBytes = new byte[ipAdressBytes.Length];
            for (int i = 0; i < subnetAddressBytes.Length; i++)
            {
                subnetAddressBytes[i] = (byte)(ipAdressBytes[i] & subnetMaskBytes[i]);
            }
            IPAddress subnetAddress = new IPAddress(subnetAddressBytes);

            // Scan all IP addresses in the subnet
            int portNumber;
            TcpClient client = new TcpClient();
            for (int i = 1; i < 255; i++)
            {
                // Check if SMB port (445) is open
                portNumber = 445;
                string remoteAddress = subnetAddress.ToString().Substring(0, subnetAddress.ToString().LastIndexOf('.') + 1) + i.ToString();
                try
                {
                    client.Connect(remoteAddress, portNumber);
                    Console.WriteLine(remoteAddress + " has open SMB port.");
                }
                catch (Exception)
                {
                    // Console.WriteLine(remoteAddress + " does not have open SMB port.");
                }

                // Check if FTP port (21) is open
                portNumber = 21;
                try
                {
                    client.Connect(remoteAddress, portNumber);
                    Console.WriteLine(remoteAddress + " has open FTP port.");
                }
                catch (Exception)
                {
                    // Console.WriteLine(remoteAddress + " does not have open FTP port.");
                }
            }
            Console.ReadKey();
        }
    }
}
